spring.application.name=fun


# DATABASE

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://localhost:3306/funspot

spring.datasource.username=root

spring.datasource.password=1234


# JPA ddl

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.format_sql=true

spring.jpa.show-sql=true


# FILE UPLOAD

spring.servlet.multipart.max-request-size=30MB

spring.servlet.multipart.max-file-size=10MB

file.upload.default.path=uploadFolder


# JWT

jwt.issuer=issuer

jwt.secretKey=secretKey

jwt.refresh.token.hour=1

jwt.access.token.min=30


# Email

spring.mail.host=smtp.naver.com

spring.mail.port=587

spring.mail.username="{your email}"

spring.mail.password="{your email password}"

spring.mail.properties.mail.smtp.auth=true

spring.mail.properties.mail.smtp.starttls.enable=true

spring.mail.properties.mail.smtp.starttls.required=true

spring.mail.properties.mail.smtp.connectiontimeout=5000

spring.mail.properties.mail.smtp.timeout=5000

spring.mail.properties.mail.smtp.writetimeout=5000


# OAuth Login

spring.security.oauth2.client.registration.google.client-id="{your clientID}"

spring.security.oauth2.client.registration.google.client-secret="{your clientSecret}"

spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.google.scope=email



spring.security.oauth2.client.registration.kakao.client-id="{your clientID}"

spring.security.oauth2.client.registration.kakao.client-secret="{your clientSecret}"

spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao

spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email



spring.security.oauth2.client.registration.naver.client-id="{your clientID}"

spring.security.oauth2.client.registration.naver.client-secret="{your clientSecret}"

spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.naver.scope=name, email, profile_image

spring.security.oauth2.client.registration.naver.client-name=Naver



spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth

spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

spring.security.oauth2.client.provider.google.user-name-attribute=email



spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize

spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token

spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.provider.kakao.user-name-attribute=id



spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize

spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token

spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.provider.naver.user-name-attribute=response


# TOKEN NOT CHECK

security.check.path.none=/api/usr/main/**,/api/token/**,/api/usr/signup/**,/api/usr/feed/**,/api/usr/check-duplicate/**,/api/usr/oauth/get-oauth-session \
/api/usr/oauth/**,/api/usr/email/send-verification/**,/api/usr/searchuserinfo/search-id/**,/api/usr/searchuserinfo/update-password/**, \
/api/usr/logout/**,/api/usr/login/**,/api/auth/kakao/**,/api/usr/profile/**,/api/usr/course/**,/api/usr/places/**

# jar redirect url

server.host.url=http://localhost:8080
#server.host.url=http://funspot.store
#
#server.address=0.0.0.0
#server.port=80

